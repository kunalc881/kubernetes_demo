kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-allpods-from-label-ns
spec:
  podSelector:
    matchLabels:
      app: web
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          purpose: production

---
---

apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: unnati
  labels:
    purpose: production
spec: {}
status: {}

---
---

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: web
  name: web
spec:
  containers:
  - image: docker.io/httpd
    name: web
    ports:
    - containerPort: 80
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

---
---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: web
  name: web
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: web
status:
  loadBalancer: {}

---
---

apiVersion: v1
kind: Pod
metadata:
    name: allow-pod
    namespace: unnati
    labels: 
        class: cka
spec:
    containers:
    - name: allow-pod
      image: alpine
      command: ["/bin/sh"]
      args: ["-c", "while true; do echo hello; sleep 10;done"]

---
---

apiVersion: v1
kind: Pod
metadata:
    name: allow-pod
    labels: 
        class: cka
spec:
    containers:
    - name: allow-pod
      image: alpine
      command: ["/bin/sh"]
      args: ["-c", "while true; do echo hello; sleep 10;done"]
